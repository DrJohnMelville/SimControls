@page "/Landing"
@implements IDisposable
@using SimControls.Model
@using System.ComponentModel
@inject LandingModel Variables;

<div id="root">
        <div id="EL">Elevator</div>
    <input id ="ELC" class="vert" type="range" 
           min="@Variables.ElevatorTrim.Minimum.Value" 
           max="@Variables.ElevatorTrim.Maximum.Value" Step="0.02" 
           @bind="Variables.ElevatorTrim.InvertedValue"/>
        <div id="FL">Flaps</div>
    <input id ="FLC" class="vert" type="range" min="0" 
           max="@Variables.Flaps.Maximum.Value" Step="1" 
           @bind="Variables.Flaps.Value"/>
    <div id="buttonsPanel">
        <ToggleButton Value="@Variables.GearDown"
                      Disabled="@(!Variables.GearRetractable.BoolValue)">
            Gear @(Variables.GearDown.BoolValue ? "Down" : "Up")
        </ToggleButton>
        <div>Lights</div>
        <ToggleButton Value="@Variables.TaxiLights">Taxi</ToggleButton>
        <ToggleButton Value="@Variables.LandingLights">Landing</ToggleButton>
        <ToggleButton Value="@Variables.NavLights">Nav</ToggleButton>
        <ToggleButton Value="@Variables.RecognitionLights">Recognition</ToggleButton>
        <ToggleButton Value="@Variables.StrobeLights">Strobe</ToggleButton>
        <ToggleButton Value="@Variables.BeaconLights">Beacon</ToggleButton>
        <ToggleButton Value="@Variables.WingLights">Wing</ToggleButton>
        <ToggleButton Value="@Variables.LogoLights">Logo</ToggleButton>
        <ToggleButton Value="@Variables.CabinLights">Cabin</ToggleButton>
        <ToggleButton Value="@Variables.PanelLights">Panel</ToggleButton>
    </div>
</div>
@code {
    
    protected override void OnInitialized()
    {
        base.OnInitialized();
        Variables.PropertyChanged += UpdateView;
    }
    
    private void UpdateView(object? s, PropertyChangedEventArgs e) => StateHasChanged();

    public void Dispose()
    {
        if (Variables != null) Variables.PropertyChanged -= UpdateView;
    }

}